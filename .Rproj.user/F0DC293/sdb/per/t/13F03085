{
    "collab_server" : "",
    "contents" : "\n#類神經網路套件 : 單一隱藏層 nnet()------------------------------------------------------------------------------------------\n\n#(1)載入套件及資料\n#從github下載套件 #plot.nnet\nlibrary(devtools)\nsource_url('https://gist.githubusercontent.com/Peque/41a9e20d6687f2f3108d/raw/85e14f3a292e126f1454864427e3a189c2fe33f3/nnet_plot_update.r')\n#install.packages(\"DMwR\")\nlibrary(DMwR)\nlibrary(nnet)\n#install.packages(\"reshape\")\nlibrary(reshape)\nlibrary(scales)\nlibrary(ggplot2)\n\n#範例使用irisdata \ndata(iris)\n\n#(2)分為訓練組和測試組資料集\nset.seed(1117)\n#取得總筆數\nn <- nrow(iris)\n#設定訓練樣本數70%\nt_size = round(0.7 * n)\n#取出樣本數的idx\nt_idx <- sample(seq_len(n), size = t_size)\n#訓練組樣本\ntraindata <- iris[t_idx,]\n#測試組樣本\ntestdata <- iris[ - t_idx,]\n\nnnetM <- nnet(formula = Species ~ ., linout = T, size = 3, decay = 0.001, maxit = 1000, trace = T, data = traindata)\n\n#(3)畫圖 \nplot.nnet(nnetM, wts.only = F)\n\n\n#(4)預測\n#test組執行預測 \nprediction <- predict(nnetM, testdata, type = 'class')\n\n#預測結果 \ncm <- table(x = testdata$Species, y = prediction, dnn = c(\"實際\", \"預測\"))\ncm\n\n#試試看把中間隱藏層的神經元改成6個\nnnetM <- nnet(formula = Species ~ ., linout = T, size = 6, decay = 0.001, maxit = 1000, trace = T, data = traindata)\n\nplot.nnet(nnetM, wts.only = F)\n\n#類神經網路套件 : 多個隱藏層 neuralnet()------------------------------------------------------------------------------\n#install.packages(\"neuralnet\")\nlibrary(\"neuralnet\")\n\n#整理資料\ndata <- iris\ndata$setosa <- ifelse(data$Species == \"setosa\", 1, 0)\ndata$versicolor <- ifelse(data$Species == \"versicolor\", 1, 0)\ndata$virginica <- ifelse(data$Species == \"virginica\", 1, 0)\n\n#訓練模型\nf1 <- as.formula('setosa + versicolor + virginica  ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width')\nbpn <- neuralnet(formula = f1, data = data, hidden = c(3,4,3),learningrate = 0.01)\nprint(bpn)\n\n#圖解BP\nplot(bpn)\n\n#調校參數\nlibrary(caret)\n\n#預測最佳神經元參數組合\nmodel <- train(form = f1, data = data, method = \"neuralnet\", \n               tuneGrid = expand.grid(.layer1 = c(1:4), .layer2 = c(1:4), .layer3 = c(0)), learningrate = 0.01)\nmodel\n",
    "created" : 1513215688658.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3976021555",
    "id" : "13F03085",
    "lastKnownWriteTime" : 1513222872,
    "last_content_update" : 1513222872051,
    "path" : "C:/Users/jestw/Desktop/CSX Data Science/L9/Practice.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}