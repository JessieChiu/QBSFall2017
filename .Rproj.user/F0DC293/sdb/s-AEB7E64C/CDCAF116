{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Model Comparison\"\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\nCompare the previous models.\n\n```{r compare, eval=FALSE}\nd3 <- as.data.frame(cbind(d1,d2$std_b,d2$score_s,d2$Bscore_s))\nnames(d3) <-c(\"Total_cases_Number\",\"Bx1\",\"Bx2\",\"Bx3\",\"crime_cases\",\"std_b\",\"score_s\",\"Bscore_s\") \n\ncompare(m1.stan,m2.stan)\n\nprediction.data = data.frame(Bx1 = mean(d3$Bx1), Bx2 = Bx2.seq, Bx3 = mean(d3$Bx3)\n                             , std_b = mean(d3$std_b), score_s = mean(d3$score_s), Bscore_s = mean(d3$Bscore_s))\n\nmu.ensemble <- ensemble(m1.stan, m2.stan, data = prediction.data)\nmu.ensemble.mean <- apply( mu.ensemble$link, 2, mean)\nmu.ensemble.PI <- apply( mu.ensemble$link, 2, PI)\n\ndata.plot <- d3\n\n###\nplot(crime_cases ~ Bx2, data=data.plot, col=\"slateblue\",main = \"WAIC Model\")\nlines( Bx2.seq, mu.ensemble.mean )\nshade(mu.ensemble.PI, Bx2.seq)\n\n\n###\nprediction.data = data.frame(Bx1 = mean(d3$Bx1), Bx2 = mean(d3$Bx2), Bx3 = Bx3.seq\n                             , std_b = mean(d3$std_b), score_s = mean(d3$score_s), Bscore_s = mean(d3$Bscore_s))\n\nmu.ensemble <- ensemble(m1.stan, m2.stan, data = prediction.data)\nmu.ensemble.mean <- apply( mu.ensemble$link, 2, mean)\nmu.ensemble.PI <- apply( mu.ensemble$link, 2, PI)\n\nplot(crime_cases ~ Bx3, data=data.plot, col=\"slateblue\",main = \"WAIC Model\")\nlines( Bx3.seq, mu.ensemble.mean )\nshade(mu.ensemble.PI, Bx3.seq)\n\n\n###\nprediction.data = data.frame(Bx1 = Bx1.seq, Bx2 = mean(d3$Bx2), Bx3 = mean(d3$Bx3)\n                             , std_b = mean(d3$std_b), score_s = mean(d3$score_s), Bscore_s = mean(d3$Bscore_s))\n\nmu.ensemble <- ensemble(m1.stan, m2.stan, data = prediction.data)\nmu.ensemble.mean <- apply( mu.ensemble$link, 2, mean)\nmu.ensemble.PI <- apply( mu.ensemble$link, 2, PI)\n\nplot(crime_cases ~ Bx1, data=data.plot, col=\"slateblue\",main = \"WAIC Model\")\nlines( Bx1.seq, mu.ensemble.mean )\nshade(mu.ensemble.PI, Bx1.seq)\n\n###\nprediction.data = data.frame(Bx1 = mean(d3$Bx1), Bx2 = mean(d3$Bx2), Bx3 = mean(d3$Bx3)\n                             , std_b = std_b.seq, score_s = mean(d3$score_s), Bscore_s = mean(d3$Bscore_s))\n\nmu.ensemble <- ensemble(m1.stan, m2.stan, data = prediction.data)\nmu.ensemble.mean <- apply( mu.ensemble$link, 2, mean)\nmu.ensemble.PI <- apply( mu.ensemble$link, 2, PI)\n\nplot(crime_cases ~ std_b, data=data.plot, col=\"slateblue\",main = \"WAIC Model\")\nlines( std_b.seq, mu.ensemble.mean )\nshade(mu.ensemble.PI, std_b.seq)\n\n###\nprediction.data = data.frame(Bx1 = mean(d3$Bx1), Bx2 = mean(d3$Bx2), Bx3 = mean(d3$Bx3)\n                             , std_b = mean(d3$std_b), score_s = score_s.seq, Bscore_s = mean(d3$Bscore_s))\n\nmu.ensemble <- ensemble(m1.stan, m2.stan, data = prediction.data)\nmu.ensemble.mean <- apply( mu.ensemble$link, 2, mean)\nmu.ensemble.PI <- apply( mu.ensemble$link, 2, PI)\n\nplot(crime_cases ~ score_s, data=data.plot, col=\"slateblue\",main = \"WAIC Model\")\nlines( score_s.seq, mu.ensemble.mean )\nshade(mu.ensemble.PI, score_s.seq)\n\n###\nprediction.data = data.frame(Bx1 = mean(d3$Bx1), Bx2 = mean(d3$Bx2), Bx3 = mean(d3$Bx3)\n                             , std_b = mean(d3$std_b), score_s = mean(d3$score_s), Bscore_s = Bscore_s.seq)\n\nmu.ensemble <- ensemble(m1.stan, m2.stan, data = prediction.data)\nmu.ensemble.mean <- apply( mu.ensemble$link, 2, mean)\nmu.ensemble.PI <- apply( mu.ensemble$link, 2, PI)\n\nplot(crime_cases ~ Bscore_s, data=data.plot, col=\"slateblue\",main = \"WAIC Model\")\nlines( Bscore_s.seq, mu.ensemble.mean )\nshade(mu.ensemble.PI, Bscore_s.seq)\n```",
    "created" : 1513151933270.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1177589882",
    "id" : "CDCAF116",
    "lastKnownWriteTime" : 1513152041,
    "last_content_update" : 1513152041411,
    "path" : "C:/Users/jestw/Desktop/QBS/QBS Group 2_final/Website/compare.Rmd",
    "project_path" : "compare.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}