{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Counterfactual Plots\"\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Load Packages\n\nLoad all required packages.\n\n```{r library, include=FALSE}\nlibrary(readr)\nlibrary(shiny)\n```\n\n## Import Values\n\nImport values computed from Model Building .\n\n```{r global, eval=FALSE}\n# read files\nsource(file.path(\"datasets\", \"model.R\"))\n```\n\n```{r global2, include=FALSE}\n# read files\nsource(file.path(\"datasets\", \"model.R\"))\n```\n\n## Model 1\n\nExamine the prediction changes of **log crime cases** as you change one predictor variable at a time.\n\nAccording to the counterfactual plots, we can conclude that:\n\n1. Predictor variable Bx3_c : \n\n**the effect of movie type - \"Neutral\"** has strong negative association with **log crime cases**.\n\n2. Predictor variable Bx1_c : \n\n**the effect of movie type - \"Crime-inducing\"** has a slightly weaker negative association with **log crime cases**.\n\n3. Predictor variable Bx2_c : \n\n**the effect of movie type - \"Crime-reducing\"** has very weak negative association with **log crime cases**.\n\n```{r crime.m1, echo=FALSE}\nshinyApp(\n  \nui = fluidPage(\ninputPanel(\n  selectInput(\"m1_select\", label = \"Select Predictor Variables:\",\n             choices = c(\"Bx3_c\", \"Bx1_c\", \"Bx2_c\"), selected = \"Bx3_c\")),\nhelpText(\"Note: Y = log crime cases\"),\nhelpText(\"Bx1_c = centered crime-inducing movies\"),\nhelpText(\"Bx2_c = centered crime-reducing movies\"),\nhelpText(\"Bx3_c = centered neutral movies\"),\n\nplotOutput(\"Plot\")\n),\n\nserver = function(input, output) {\n# counterfactual plot holding other predictor variables constant at its mean \n# define model and fit \nmodel1 <- lm(log_crime~ Bx1_c + Bx2_c + Bx3_c, data=d)\nX_seq <- seq( from=-5.5, to=4.2, length.out=30 )\n\noutput$Plot <-renderPlot({\n  for (i in 1:3){\n    if(input$m1_select ==  paste0(\"Bx\", i,\"_c\")) {\n      Bx1_c <- mean(d$Bx1_c)\n      Bx2_c <- mean(d$Bx2_c) \n      Bx3_c <- mean(d$Bx3_c) \n      assign(paste0(\"Bx\", i,\"_c\"), X_seq)\n      pred.dat <- data.frame(\n        Bx1_c <- Bx1_c,\n        Bx2_c <- Bx2_c,\n        Bx3_c <- Bx3_c\n        )\n    \n      mu <- link(model1, data=pred.dat) \n      mu.mean <- apply(mu, 2, mean) \n      mu.PI <- apply(mu, 2, PI)\n  \n      plot(log_crime~ Bx1_c + Bx2_c + Bx3_c, data=d, type=\"n\") \n      lines(X_seq, mu.mean) \n      shade(mu.PI, X_seq)\n    }\n  }\n})\n}\n\noptions = list(height = 500)\n)\n\n```\n\n.\n\n## Model 2\n\nExamine the prediction changes of **log crime cases** as you change one predictor variable at a time.\n\nAccording to the counterfactual plots, we can conclude that:\n\n1. Predictor variable log_box_office : \n\n**the effect of log box office results** has strong negative association with **log crime cases**.\n\n2. Predictor variable score.s : \n\nThe wide confidence interval indicates that the sample size was too small. The data is consistent with a wide range of possible hypotheses. The conclusion that **the effect of movie scores** is negatively associated with ** log crime cases**, as shown in the plot, needs to be replicated with a larger sample size.\n\n3. Predictor variable Bscore.s : \n\nThe wide confidence interval indicates that the sample size was too small. The data is consistent with a wide range of possible hypotheses. The conclusion that **the effect of interaction between log box office results and movie scores** is negatively associated with ** log crime cases**, as shown in the plot, needs to be replicated with a larger sample size.\n\n```{r crime.m2, echo=FALSE}\nshinyApp(\n  \nui = fluidPage(\ninputPanel(\n  selectInput(\"m2_select\", label = \"Select Predictor Variables:\",\n             choices = c(\"log_box_office\", \"score.s\", \"Bscore.s\"), selected = \"log_box_office\")),\nhelpText(\"Note: Y = log crime cases\"),\nhelpText(\"log_box_office = log box office results\"),\nhelpText(\"score.s = standardized movie scores\"),\nhelpText(\"Bscore.s = interaction between predictors log_box_office and score.s\"),\n\nplotOutput(\"Plot\")\n),\n\nserver = function(input, output) {\n# counterfactual plot holding other predictor variables constant at its mean \n# define model and fit \nmodel2 <- lm(log_crime ~ log_box_office + score.s + Bscore.s, data=d)\n\noutput$Plot <- renderPlot({\n  if(input$m2_select ==  \"log_box_office\") {\n      log_box_office.seq <- seq( from=16, to=18, length.out=30 )\n      score.s <- mean(d$score.s) \n      Bscore.s <- mean(d$Bscore.s) \n      pred.dat <- data.frame(\n        log_box_office <- log_box_office.seq,\n        score.s <- score.s,\n        Bscore.s <- Bscore.s\n        )\n    \n      mu <- link(model2, data=pred.dat) \n      mu.mean <- apply(mu, 2, mean) \n      mu.PI <- apply(mu, 2, PI)\n  \n      plot(log_crime ~ log_box_office, data=d, type=\"n\") \n      lines(log_box_office.seq, mu.mean) \n      shade(mu.PI, log_box_office.seq)\n  }\n  \n  if(input$m2_select ==  \"score.s\") {\n      log_box_office <- mean(d$log_box_office)\n      score.s.seq <- seq( from=-0.4, to=0.5, length.out=30 ) \n      Bscore.s <- mean(d$Bscore.s) \n      pred.dat <- data.frame(\n        log_box_office <- log_box_office,\n        score.s <- score.s.seq,\n        Bscore.s <- Bscore.s\n        )\n    \n      mu <- link(model2, data=pred.dat) \n      mu.mean <- apply(mu, 2, mean) \n      mu.PI <- apply(mu, 2, PI)\n  \n      plot(log_crime ~ score.s, data=d, type=\"n\") \n      lines(score.s.seq, mu.mean) \n      shade(mu.PI, score.s.seq)\n  }\n  \n  if(input$m2_select ==  \"Bscore.s\") {\n      log_box_office <- mean(d$log_box_office)\n      score.s <- mean(d$score.s) \n      Bscore.s.seq <- seq( from=-6, to=9, length.out=30 ) \n      pred.dat <- data.frame(\n        log_box_office <- log_box_office,\n        score.s <- score.s,\n        Bscore.s <- Bscore.s.seq\n        )\n    \n      mu <- link(model2, data=pred.dat) \n      mu.mean <- apply(mu, 2, mean) \n      mu.PI <- apply(mu, 2, PI)\n  \n      plot(log_crime ~ Bscore.s, data=d, type=\"n\") \n      lines(Bscore.s.seq, mu.mean) \n      shade(mu.PI, Bscore.s.seq)\n  }\n  })\n},\n\noptions = list(height = 500)\n)\n\n```\n",
    "created" : 1513383279433.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "378601924",
    "id" : "92408BAB",
    "lastKnownWriteTime" : 1513476970,
    "last_content_update" : 1513476970166,
    "path" : "C:/Users/jestw/Desktop/QBS/QBS Group 2_final/Website/plot.Rmd",
    "project_path" : "plot.Rmd",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}