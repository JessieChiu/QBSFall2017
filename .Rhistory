setwd("C:/Users/jestw/Desktop/QBS/QBS Group 2_final")
setwd("C:/Users/jestw/Desktop/QBS/QBS Group 2_final")
M1 = read.csv("M1.data.new.csv")
Q1 = read.csv("QBS-Q1-data-new.csv")
Q2 = read.csv("QBS-Q2-data-new.csv")
Q3 = read.csv("QBS-Q3-data-new.csv")
Q4 = read.csv("QBS-Q4-data-new.csv")
Y = read.csv("Crime-Rate.csv")
data = rbind(Q1,Q2,Q3,Q4)
# convert factor to numeric
data$box_office = as.numeric(data$box_office)
data$rotten_tomatoes = as.numeric(data$rotten_tomatoes)
data$Imbd = as.numeric(data$Imbd)
# convert box office to log for better comparison
data$log_box_office = log(data$box_office)
# compute mean score and overwrite NA values
A = (data$rotten_tomatoes + data$Imbd)/2
B = data$Imbd
data$score = ifelse(!is.na(data$rotten_tomatoes), A, B)
data = data[complete.cases(data[ , 8:9]), ]
data$score.s = (data$score - mean(data$score))/sd(data$score)
# text mining
require("xml2")
library('rvest')
library('NLP')
library('tm')
library('stringr')
category <- data$category
corpus <- Corpus(VectorSource(category))
## Data-Preprocessing: removing punctuation
corpus2 <- tm_map(corpus, removePunctuation)
## Data-Preprocessing: changing all to lower case
corpus2 <- tm_map(corpus2, tolower)
## Data-Preprocessing: removing whitespaces
corpus2 <- tm_map(corpus2, stripWhitespace)
corpus2 = sapply(corpus2, as.character)
data$category =as.factor(corpus2)
# determine x1=number of crime-inducing films------------------------------------------------
x1 = c("crime","thriller","horror","mystery","suspense")
x1 = paste(x1, collapse='|')
#####
x1_row = which(apply(data.frame(data$category), 1, function(i) str_detect(paste(i, collapse=','), x1)))
for(i in 1:481){
if (i %in% x1_row){
data[i,"x1"] = 1
} else{
data[i,"x1"] = 0
}
}
# determine x2=number of crime-reducing films------------------------------------------------
#install.packages("stringr")
x2 = c("family","kids","comedy","animation")
x2 = paste(x2, collapse='|')
x2_row = which(apply(data.frame(data$category), 1, function(i) str_detect(paste(i, collapse=','), x2)))
for(i in 1:481){
if (i %in% x2_row){
data[i,"x2"] = 1
} else{
data[i,"x2"] = 0
}
}
# determine x3=number of neutral films------------------------------------------------
data$x3 = ifelse(data$x1 +data$x2 == 0, 1, 0)
library(dplyr)
# Model 1:
extract.data = data %>%
group_by(year, Quarter) %>%
summarise(Bx1=mean(log_box_office*x1), Bx2=mean(log_box_office*x2), Bx3=mean(log_box_office*x3)) %>%
select(year, Quarter, Bx1, Bx2, Bx3)
extract.data = merge(Y, extract.data, by=c("year","Quarter"))
write.csv(extract.data, "M1.data.new.csv")
# Model 2:
extract.data = data %>%
group_by(year, Quarter) %>%
summarise(log_box_office=mean(log_box_office), score.s = mean(score.s), Bscore.s=mean(log_box_office*score.s)) %>%
select(year, Quarter, log_box_office, score.s, Bscore.s)
extract.data = merge(Y, extract.data, by=c("year","Quarter"))
write.csv(extract.data, "M2.data.new.csv")
M1 = read.csv("M1.data.new.csv")
M2 = read.csv("M2.data.new.csv")
complete.data = rbind(M1,M2)
View(M1)
View(M2)
View(M1)
View(M2)
?cbind
complete.data = cbind(M1,M2)
View(complete.data)
View(complete.data)
complete.data = rbind(M1,M2)
library(dplyr)
complete.data = bind_rows(M1,M2)
View(complete.data)
View(M1)
View(M1)
View(M2)
class(extract.data$Bscore.s)
extract.data = data %>%
group_by(year, Quarter) %>%
summarise(Bx1=mean(log_box_office*x1), Bx2=mean(log_box_office*x2), Bx3=mean(log_box_office*x3)) %>%
select(year, Quarter, Bx1, Bx2, Bx3)
extract.data = merge(Y, extract.data, by=c("year","Quarter"))
class(extract.data$Bx1)
library(plyr)
complete.data = rbind.fill(M1,M2)
View(complete.data)
?merge
complete.data = merge(M1,M2)
View(complete.data)
write.csv(complete.data, "Data.csv")
